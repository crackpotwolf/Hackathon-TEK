<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Hackathon-TEK</name>
    </assembly>
    <members>
        <member name="M:Hackathon_TEK.Controllers.API.AnalyzesController.Post(System.Collections.Generic.List{Hackathon_TEK.Models.Analyze})">
            <summary>
            Запись списка анализов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.EarthquakesController.Get">
            <summary>
            Получение списка землетрясений
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.EarthquakesController.Post(System.Collections.Generic.List{Hackathon_TEK.Models.Earthquake})">
            <summary>
            Запись списка землетрясений
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.FiresController.Get">
            <summary>
            Получение списка пожаров
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.FiresController.Post(System.Collections.Generic.List{Hackathon_TEK.Models.Fire})">
            <summary>
            Запись списка пожаров
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.ReasonsController.Get">
            <summary>
            Получение списка причин
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.ReasonsController.Post(System.Collections.Generic.List{Hackathon_TEK.Models.Reason})">
            <summary>
            Запись списка причин
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.RegionDataController.Get">
            <summary>
            Получение списка регионов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.RegionDataController.Post(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.Collections.Generic.List{System.Double}}}})">
            <summary>
            Запись списка регионов
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.WeatherController.Get">
            <summary>
            Получение списка погоды
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Controllers.API.WeatherController.Post(System.Collections.Generic.Dictionary{System.String,Hackathon_TEK.Models.WeatherDataVM})">
            <summary>
            Запись списка данных о погоде
            </summary>
            <returns></returns>
        </member>
        <member name="T:Hackathon_TEK.Extensions.DateTimeExtension">
            <summary>
            Если у функции, дата принимается в виде long, то она должна прийти в секундах, также необходимо передать offset (в секундах), 
            даже если эта дата не имеет поправку на время (в этом случае в offset передавать просто 0).
            в базе храниться время GMT+00:00. На клиенте нужно делать поправку на временную зону при необходимости.
            Если дата приходит в string, смещение передавать не нужно.
            </summary> 
        </member>
        <member name="M:Hackathon_TEK.Extensions.FileExtensions.WriteToFile(System.IO.FileInfo,System.String)">
            <summary>
            Запись текста в файл
            </summary>
            <param name="file">Файл</param>
            <param name="text">Текст</param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Extensions.FileExtensions.ParseCSV(System.IO.FileInfo,System.String)">
            <summary>
            Парсинг CSV файла
            </summary>
        </member>
        <member name="M:Hackathon_TEK.Extensions.FileExtensions.ReadAllFile(System.IO.FileInfo,System.String@)">
            <summary>
            Получить весь текст из файла
            </summary>
            <param name="file">Файл</param>
            <param name="text">Переменная, куда сохранить текст из файла</param>
            <returns>
            Код ошибки
             0 - Успешно
            -1 - Файл не существует
            </returns>
        </member>
        <member name="T:Hackathon_TEK.Interfaces.IEntity">
            <summary>
            Базовый интерфейс
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Interfaces.IEntity.Id">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Interfaces.IEntity.IsDelete">
            <summary>
            Флаг удаления
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Models.AbstractEntity">
            <summary>
            Базовый класс
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.AbstractEntity.Id">
            <summary>
            Уникальный идентификатор
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.AbstractEntity.IsDelete">
            <summary>
            Флаг удаления
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Models.Fire">
            <summary>
            Данные о пожарах
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Models.Reason">
            <summary>
            Причины возникновения ЧС
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.IndustryType">
            <summary>
            Тип индустрии
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.EventType">
            <summary>
            Тип события
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.TypeObject">
            <summary>
            Тип объекта
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.ReasonDescription">
            <summary>
            Причина
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Reason.IsWeather">
            <summary>
            Причина относится к погодным данным
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Models.Region">
            <summary>
            Регион (субъект федерации)
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Region.Name">
            <summary>
            Наименование
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Region.Coordinates">
            <summary>
            Полигон
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Region.RssUrl">
            <summary>
            Ссылка на RSS лонту оперативной сводки МЧС региона
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.Region.MapId">
            <summary>
            Идентификатор региона на карте 
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Models.RegionConnectedObject">
            <summary>
            Родительский класс для объектов, привязанных к региону
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.RegionConnectedObject.RegionId">
            <summary>
            Идентификатор региона
            </summary>
        </member>
        <member name="P:Hackathon_TEK.Models.RegionConnectedObject.Region">
            <summary>
            Объект региона
            </summary>
        </member>
        <member name="T:Hackathon_TEK.Repository.AbstractRepository`1">
            <summary>
            Базовый репозиторий
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Add(`0)">
            <summary>
            Добавляет объект
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Добавляет элементы указанной коллекции
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Update(`0)">
            <summary>
            Обновление объекта
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Update(System.Int32)">
            <summary>
            Обновление объекта
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Обновление элементов указанной коллекции
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Remove(`0)">
            <summary>
            Удаление объекта
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Remove(System.Int32)">
            <summary>
            Удаление объекта по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Удаляет элементы указанной коллекции
            </summary>
            <param name="models"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Delete(`0)">
            <summary>
            Удаление объекта
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.GetListQuery">
            <summary>
            Получить коллекцию
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.GetListQueryWithDeleted">
            <summary>
            Получить коллекцию с удаленными объектами
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.GetList">
            <summary>
            Получить коллекцию
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.GetListWithDeleted">
            <summary>
            Получить коллекцию с удаленными объектами
            </summary>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.SearchById(System.Int32)">
            <summary>
            Возвращает первый элемент последовательности или значение по умолчанию, если ни одного элемента не найдено
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.Any(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Проверяет существование хотя бы одного элемента в последовательности 
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
        <member name="M:Hackathon_TEK.Repository.AbstractRepository`1.FirstOrDefault(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Возвращает первый элемент последовательности или значение по умолчанию, если ни одного элемента не найдено
            </summary>
            <param name="func"></param>
            <returns></returns>
        </member>
    </members>
</doc>
